{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport useFetch from \"../utils/useFetch\";\nimport { Card, Dropdown } from \"semantic-ui-react\";\nimport { numberWithCommas } from \"../utils/format\";\n\nvar StateStats = function StateStats(_ref) {\n  var country = _ref.country;\n\n  if (country === \"world\") {\n    return __jsx(\"p\", null, \"Select country to see state wise data\");\n  }\n\n  var _useState = useState(undefined),\n      selectedState = _useState[0],\n      setSelectedState = _useState[1];\n\n  useEffect(function () {\n    setSelectedState(undefined);\n  }, [country]);\n\n  var _useFetch = useFetch(\"https://covid19.mathdro.id/api/countries/\".concat(country, \"/confirmed\")),\n      states = _useFetch.stats,\n      loading = _useFetch.loading,\n      error = _useFetch.error;\n\n  if (loading) return __jsx(\"p\", null, \"Loading States of selected country...\");\n  if (error) return __jsx(\"p\", null, \"Retrieving states API Error => \", error.toString());\n  if (states.error) return __jsx(\"h3\", null, \"No data found. Retrieving states API error => \", stats.error.message);\n  console.log(\"State wise info\", states);\n  var stateOptions = states.map(function (_ref2, index) {\n    var provinceState = _ref2.provinceState,\n        countryRegion = _ref2.countryRegion;\n    return {\n      key: provinceState || countryRegion,\n      value: provinceState || countryRegion,\n      text: provinceState || countryRegion\n    };\n  });\n\n  var _onChange = function onChange(selectedValue) {\n    var selected = states.find(function (state) {\n      return state.provinceState === selectedValue;\n    });\n    console.log(\"Selected state info\", selected);\n\n    if (!selected) {\n      selected = states[0];\n    }\n\n    setSelectedState(selected);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Dropdown, {\n    placeholder: \"Select State\",\n    fluid: true,\n    search: true,\n    selection: true,\n    selectOnBlur: false,\n    options: stateOptions,\n    onChange: function onChange(e, data) {\n      _onChange(data.value);\n    }\n  }), __jsx(\"br\", null), selectedState && __jsx(Card.Group, {\n    itemsPerRow: 4\n  }, __jsx(Card, {\n    header: \"Confirmed\",\n    description: selectedState && numberWithCommas(selectedState.confirmed),\n    color: \"grey\",\n    meta: \"\"\n  }), __jsx(Card, {\n    header: \"Active\",\n    description: selectedState && numberWithCommas(selectedState.active),\n    color: \"blue\",\n    meta: \"\"\n  }), __jsx(Card, {\n    header: \"Recovered\",\n    description: selectedState && numberWithCommas(selectedState.recovered),\n    color: \"green\",\n    meta: \"\"\n  }), __jsx(Card, {\n    header: \"Deaths\",\n    description: selectedState && numberWithCommas(selectedState.deaths),\n    color: \"red\",\n    meta: \"\"\n  })));\n};\n\nexport default StateStats;","map":null,"metadata":{},"sourceType":"module"}