{"ast":null,"code":"var _jsxFileName = \"C:\\\\Learning\\\\coronavirus-tracker\\\\components\\\\Stats.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport useFetch from \"../utils/useFetch\";\nimport styled from \"styled-components\";\nimport { Card } from \"semantic-ui-react\";\nconst StatGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1rem;\n`;\nconst StatBlock = styled.div`\n  background: #f2f2f2;\n  font-size: 2rem;\n  padding: 2rem;\n  border-radius: 2rem;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  text-align: center;\n`;\nconst Stats = React.memo(({\n  url\n}) => {\n  const {\n    stats,\n    loading,\n    error\n  } = useFetch(url);\n  console.log(\"Stats component loading\", stats, loading, error);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, error.toString());\n  if (stats.error) return __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"No data found. API error => \", stats.error.message);\n  return __jsx(React.Fragment, null, __jsx(StatGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Confirmed:\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, stats.confirmed.value)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Deaths:\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, stats.deaths.value)), __jsx(StatBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Recovered:\"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, stats.recovered.value))));\n});\nexport default Stats;","map":{"version":3,"sources":["C:/Learning/coronavirus-tracker/components/Stats.js"],"names":["React","useFetch","styled","Card","StatGrid","div","StatBlock","Stats","memo","url","stats","loading","error","console","log","toString","message","confirmed","value","deaths","recovered"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,MAAMC,QAAQ,GAAGF,MAAM,CAACG,GAAI;;;;CAA5B;AAKA,MAAMC,SAAS,GAAGJ,MAAM,CAACG,GAAI;;;;;;;;;CAA7B;AAWA,MAAME,KAAK,GAAGP,KAAK,CAACQ,IAAN,CAAW,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACpC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BX,QAAQ,CAACQ,GAAD,CAA1C;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCJ,KAAvC,EAA8CC,OAA9C,EAAuDC,KAAvD;AAEA,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACG,QAAN,EAAJ,CAAP;AAEX,MAAIL,KAAK,CAACE,KAAV,EACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAiCF,KAAK,CAACE,KAAN,CAAYI,OAA7C,CAAP;AAEF,SACE,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,KAAK,CAACO,SAAN,CAAgBC,KAAvB,CAFF,CADF,EAKE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,KAAK,CAACS,MAAN,CAAaD,KAApB,CAFF,CALF,EASE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,KAAK,CAACU,SAAN,CAAgBF,KAAvB,CAFF,CATF,CADF,CADF;AAkBD,CA7Ba,CAAd;AA+BA,eAAeX,KAAf","sourcesContent":["import React from \"react\";\r\nimport useFetch from \"../utils/useFetch\";\r\nimport styled from \"styled-components\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nconst StatGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 1rem;\r\n`;\r\nconst StatBlock = styled.div`\r\n  background: #f2f2f2;\r\n  font-size: 2rem;\r\n  padding: 2rem;\r\n  border-radius: 2rem;\r\n  display: grid;\r\n  align-items: center;\r\n  justify-items: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst Stats = React.memo(({ url }) => {\r\n  const { stats, loading, error } = useFetch(url);\r\n  console.log(\"Stats component loading\", stats, loading, error);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  if (error) return <p>{error.toString()}</p>;\r\n\r\n  if (stats.error)\r\n    return <h3>No data found. API error => {stats.error.message}</h3>;\r\n\r\n  return (\r\n    <>\r\n      <StatGrid>\r\n        <StatBlock>\r\n          <h3>Confirmed:</h3>\r\n          <span>{stats.confirmed.value}</span>\r\n        </StatBlock>\r\n        <StatBlock>\r\n          <h3>Deaths:</h3>\r\n          <span>{stats.deaths.value}</span>\r\n        </StatBlock>\r\n        <StatBlock>\r\n          <h3>Recovered:</h3>\r\n          <span>{stats.recovered.value}</span>\r\n        </StatBlock>\r\n      </StatGrid>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Stats;\r\n"]},"metadata":{},"sourceType":"module"}