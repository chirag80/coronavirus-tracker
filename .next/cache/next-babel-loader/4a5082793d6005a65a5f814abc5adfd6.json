{"ast":null,"code":"var _jsxFileName = \"C:\\\\Learning\\\\coronavirus-tracker\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport CountrySelector from \"../components/CountrySelector\";\nimport Stats from \"../components/Stats\";\nimport { useState, useMemo } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Grid, Segment, Responsive, Button } from \"semantic-ui-react\";\nimport Chart from \"../components/Chart\";\nimport StateStats from \"../components/StateStats\";\nimport BarChart from \"../components/BarChart\";\n\nvar Index = function Index() {\n  var _useState = useState(\"https://covid19.mathdro.id/api\"),\n      url = _useState[0],\n      setUrl = _useState[1];\n\n  var _useState2 = useState({\n    iso2: \"\",\n    iso3: \"\"\n  }),\n      selectedCountry = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      quickLinkState = _useState3[0],\n      setQuickLink = _useState3[1];\n\n  var memoStatsComponent = useMemo(function () {\n    return __jsx(Stats, {\n      url: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }, [url]);\n  var memoStateStats = useMemo(function () {\n    return __jsx(StateStats, {\n      iso3: selectedCountry.iso3,\n      iso2: selectedCountry.iso3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }, [selectedCountry]);\n\n  var onChange = function onChange(iso2, iso3) {\n    //this is to load state dropdown for StateStats\n    setSelected({\n      iso2: iso2,\n      iso3: iso3\n    });\n\n    if (iso2 === \"world\") {\n      setUrl(\"https://covid19.mathdro.id/api\");\n    } else {\n      //this is to load statistics of selected country. country is iso2 code\n      setUrl(\"https://covid19.mathdro.id/api/countries/\".concat(iso2));\n    }\n  };\n\n  var memoBarChartComp = useMemo(function () {\n    return __jsx(BarChart, {\n      selectedState: selectedState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }, [quickLinkState]);\n\n  var handleBtnClick = function handleBtnClick(provinceState, iso2) {\n    setQuickLink({\n      iso2: iso2,\n      provinceState: provinceState\n    });\n  };\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Grid, {\n    stackable: true,\n    stretched: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Grid.Row, {\n    stretched: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Responsive, {\n    as: Segment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Chart, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })))), __jsx(Grid.Row, {\n    stretched: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(Responsive, {\n    as: Segment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(CountrySelector, {\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), memoStatsComponent))), __jsx(Grid.Row, {\n    stretched: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Responsive, {\n    as: Segment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, memoStateStats))), __jsx(Grid.Row, {\n    stretched: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Responsive, {\n    as: Segment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Button, {\n    basic: true,\n    size: \"mini\",\n    onClick: function onClick(e, data) {\n      handleBtnClick(data.children, \"US\");\n    },\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"New Jersey\"), __jsx(Button, {\n    basic: true,\n    size: \"mini\",\n    onClick: function onClick(e, data) {\n      handleBtnClick(data.children, \"US\");\n    },\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"New York\"), quickLinkState && memoBarChartComp)))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Learning/coronavirus-tracker/pages/index.js"],"names":["CountrySelector","Stats","useState","useMemo","Container","Grid","Segment","Responsive","Button","Chart","StateStats","BarChart","Index","url","setUrl","iso2","iso3","selectedCountry","setSelected","undefined","quickLinkState","setQuickLink","memoStatsComponent","memoStateStats","onChange","memoBarChartComp","selectedState","handleBtnClick","provinceState","e","data","children"],"mappings":"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","sourcesContent":["import CountrySelector from \"../components/CountrySelector\";\r\nimport Stats from \"../components/Stats\";\r\nimport { useState, useMemo } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { Grid, Segment, Responsive, Button } from \"semantic-ui-react\";\r\nimport Chart from \"../components/Chart\";\r\nimport StateStats from \"../components/StateStats\";\r\nimport BarChart from \"../components/BarChart\";\r\n\r\nconst Index = () => {\r\n  const [url, setUrl] = useState(\"https://covid19.mathdro.id/api\");\r\n\r\n  const [selectedCountry, setSelected] = useState({ iso2: \"\", iso3: \"\" });\r\n\r\n  const [quickLinkState, setQuickLink] = useState(undefined);\r\n\r\n  const memoStatsComponent = useMemo(() => <Stats url={url} />, [url]);\r\n\r\n  const memoStateStats = useMemo(\r\n    () => (\r\n      <StateStats iso3={selectedCountry.iso3} iso2={selectedCountry.iso3} />\r\n    ),\r\n    [selectedCountry]\r\n  );\r\n\r\n  const onChange = (iso2, iso3) => {\r\n    //this is to load state dropdown for StateStats\r\n    setSelected({ iso2, iso3 });\r\n\r\n    if (iso2 === \"world\") {\r\n      setUrl(\"https://covid19.mathdro.id/api\");\r\n    } else {\r\n      //this is to load statistics of selected country. country is iso2 code\r\n      setUrl(`https://covid19.mathdro.id/api/countries/${iso2}`);\r\n    }\r\n  };\r\n\r\n  const memoBarChartComp = useMemo(\r\n    () => <BarChart selectedState={selectedState} />,\r\n    [quickLinkState]\r\n  );\r\n\r\n  const handleBtnClick = (provinceState, iso2) => {\r\n    setQuickLink({ iso2, provinceState });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid stackable={true} stretched={true}>\r\n        <Grid.Row stretched>\r\n          <Grid.Column>\r\n            <Responsive as={Segment}>\r\n              <Chart />\r\n            </Responsive>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row stretched>\r\n          <Grid.Column>\r\n            <Responsive as={Segment}>\r\n              <CountrySelector onChange={onChange} />\r\n              <br />\r\n              {memoStatsComponent}\r\n            </Responsive>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row stretched>\r\n          <Grid.Column>\r\n            <Responsive as={Segment}>{memoStateStats}</Responsive>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row stretched>\r\n          <Grid.Column>\r\n            <Responsive as={Segment}>\r\n              <Button\r\n                basic\r\n                size='mini'\r\n                onClick={(e, data) => {\r\n                  handleBtnClick(data.children, \"US\");\r\n                }}\r\n                color='blue'\r\n              >\r\n                New Jersey\r\n              </Button>\r\n              <Button\r\n                basic\r\n                size='mini'\r\n                onClick={(e, data) => {\r\n                  handleBtnClick(data.children, \"US\");\r\n                }}\r\n                color='blue'\r\n              >\r\n                New York\r\n              </Button>\r\n              {quickLinkState && memoBarChartComp}\r\n            </Responsive>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}