{"ast":null,"code":"const getChartDate = (chartType, apiData) => {\n  //console.log(\"Api data\", apiData.slice(-10));\n  let sliced = apiData.slice(-40);\n  return {\n    labels: sliced.map(it => it.reportDateString),\n    datasets: [{\n      label: \"Total\",\n      fill: false,\n      lineTension: 0.1,\n      pointBackgroundColor: \"red\",\n      pointBorderColor: \"red\",\n      pointHoverRadius: 5,\n      pointRadius: 3,\n      backgroundColor: \"red\",\n      pointHoverBackgroundColor: \"red\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      borderColor: \"red\",\n      data: sliced.map(it => it.totalConfirmed)\n    }, {\n      label: \"China\",\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: \"orange\",\n      borderColor: \"orange\",\n      borderCapStyle: \"butt\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"orange\",\n      pointBackgroundColor: \"orange\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"orange\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 3,\n      pointHitRadius: 10,\n      data: sliced.map(it => it.mainlandChina)\n    }, {\n      label: \"Other Countries\",\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: \"blue\",\n      borderColor: \"blue\",\n      borderCapStyle: \"butt\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"blue\",\n      pointBackgroundColor: \"blue\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"blue\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 3,\n      pointHitRadius: 10,\n      data: sliced.map(it => it.otherLocations)\n    }, {\n      label: \"Recovered\",\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: \"green\",\n      borderColor: \"green\",\n      borderCapStyle: \"butt\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"green\",\n      pointBackgroundColor: \"green\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"green\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 3,\n      pointHitRadius: 10,\n      data: sliced.map(it => it.totalRecovered)\n    }]\n  };\n};\n\nconst getChartOptions = type => {\n  return {\n    responsive: true,\n    height: 400,\n    legend: {\n      position: \"top\",\n      labels: {\n        usePointStyle: true,\n        boxWidth: 8\n      }\n    },\n    tooltips: {\n      mode: \"index\",\n      callbacks: {\n        label: function (tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || \"\";\n\n          if (label) {\n            label += \": \";\n          }\n\n          label += tooltipItem.yLabel.toLocaleString();\n          return label;\n        }\n      }\n    },\n    scales: {\n      xAxes,\n      yAxes\n    },\n    title: {\n      display: \"Display\",\n      text: \"Coronavirs Cases - Overall Stats\"\n    }\n  };\n};\n\nconst xAxes = [{\n  type: \"time\",\n  distribution: \"series\",\n  gridLines: {\n    display: false\n  },\n  scaleLabel: {\n    display: true,\n    labelString: \"Date (Last 40 days)\"\n  },\n  ticks: {\n    major: {\n      enabled: true,\n      fontStyle: \"bold\"\n    },\n    source: \"data\",\n    autoSkip: true,\n    autoSkipPadding: 0,\n    maxRotation: 50\n  },\n  time: {\n    tooltipFormat: \"MM/DD/YYYY\",\n    displayFormats: {\n      month: \"MMM DD\"\n    }\n  }\n}];\nconst yAxes = [{\n  scaleLabel: {\n    display: true,\n    labelString: \"Number of cases (in thousands)\"\n  },\n  ticks: {\n    beginAtZero: true,\n    userCallback: function (value, index, values) {\n      return value.toLocaleString(); // this is all we need\n    }\n  }\n}];\nexport { getChartDate, getChartOptions };","map":null,"metadata":{},"sourceType":"module"}