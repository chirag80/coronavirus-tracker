{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Learning\\\\coronavirus-tracker\\\\components\\\\BarChart.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { getBarChartData, getBarChartOptions } from \"../utils/chartUtils\";\n\nvar BarChart = function BarChart(_ref) {\n  var selectedState = _ref.selectedState;\n  //console.log(\"Bar Chart\", selectedState);\n  if (!selectedState) return __jsx(React.Fragment, null);\n\n  var _useState = useState({}),\n      locations = _useState[0],\n      setLocations = _useState[1];\n\n  var getData = function getData() {\n    var response, data;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://coronavirus-tracker-api.herokuapp.com/confirmed\"));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n            //console.log(\"useEffect bar chart\", data.locations);\n            setLocations(data.locations);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  var chartData = {}; //getChartDate(\"line\", stats);\n\n  var chartOptions = {}; //getChartOptions(\"line\");\n\n  useEffect(function () {\n    chartData = getBarChartData(locations);\n    chartOptions = getBarChartOptions();\n  }, [selectedState, locations]);\n  return __jsx(React.Fragment, null, __jsx(Bar, {\n    data: chartData,\n    width: 100,\n    height: 50,\n    options: {\n      maintainAspectRatio: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default BarChart;","map":{"version":3,"sources":["C:/Learning/coronavirus-tracker/components/BarChart.js"],"names":["React","useState","useEffect","Bar","getBarChartData","getBarChartOptions","BarChart","selectedState","locations","setLocations","getData","fetch","response","json","data","chartData","chartOptions","maintainAspectRatio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,qBAApD;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAuB;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AACtC;AAEA,MAAI,CAACA,aAAL,EAAoB,OAAO,2BAAP;;AAHkB,kBAKJN,QAAQ,CAAC,EAAD,CALJ;AAAA,MAK/BO,SAL+B;AAAA,MAKpBC,YALoB;;AAOtC,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOC,KAAK,CACxB,yDADwB,CADZ;;AAAA;AACVC,YAAAA,QADU;AAAA;AAAA,6CAIGA,QAAQ,CAACC,IAAT,EAJH;;AAAA;AAIVC,YAAAA,IAJU;AAKd;AACAL,YAAAA,YAAY,CAACK,IAAI,CAACN,SAAN,CAAZ;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AASAN,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIK,SAAS,GAAG,EAAhB,CApBsC,CAoBlB;;AACpB,MAAIC,YAAY,GAAG,EAAnB,CArBsC,CAqBf;;AAEvBd,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,SAAS,GAAGX,eAAe,CAACI,SAAD,CAA3B;AACAQ,IAAAA,YAAY,GAAGX,kBAAkB,EAAjC;AACD,GAHQ,EAGN,CAACE,aAAD,EAAgBC,SAAhB,CAHM,CAAT;AAKA,SACE,4BACE,MAAC,GAAD;AACE,IAAA,IAAI,EAAEO,SADR;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,MAAM,EAAE,EAHV;AAIE,IAAA,OAAO,EAAE;AACPE,MAAAA,mBAAmB,EAAE;AADd,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD,CAxCD;;AA0CA,eAAeX,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { getBarChartData, getBarChartOptions } from \"../utils/chartUtils\";\r\n\r\nconst BarChart = ({ selectedState }) => {\r\n  //console.log(\"Bar Chart\", selectedState);\r\n\r\n  if (!selectedState) return <></>;\r\n\r\n  const [locations, setLocations] = useState({});\r\n\r\n  const getData = async () => {\r\n    let response = await fetch(\r\n      \"https://coronavirus-tracker-api.herokuapp.com/confirmed\"\r\n    );\r\n    let data = await response.json();\r\n    //console.log(\"useEffect bar chart\", data.locations);\r\n    setLocations(data.locations);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  let chartData = {}; //getChartDate(\"line\", stats);\r\n  let chartOptions = {}; //getChartOptions(\"line\");\r\n\r\n  useEffect(() => {\r\n    chartData = getBarChartData(locations);\r\n    chartOptions = getBarChartOptions();\r\n  }, [selectedState, locations]);\r\n\r\n  return (\r\n    <>\r\n      <Bar\r\n        data={chartData}\r\n        width={100}\r\n        height={50}\r\n        options={{\r\n          maintainAspectRatio: true\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"]},"metadata":{},"sourceType":"module"}