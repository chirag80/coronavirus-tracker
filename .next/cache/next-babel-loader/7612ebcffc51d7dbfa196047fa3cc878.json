{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport useFetch from \"../utils/useFetch\";\nimport { Card, Dropdown } from \"semantic-ui-react\";\nimport { numberWithCommas } from \"../utils/format\";\n\nconst StateStats = ({\n  country\n}) => {\n  if (country === \"world\") {\n    return __jsx(\"p\", null, \"Select country to see state wise data\");\n  }\n\n  const {\n    0: selectedState,\n    1: setSelectedState\n  } = useState(undefined);\n  useEffect(() => {\n    setSelectedState(undefined);\n  }, [country]);\n  const {\n    stats: states,\n    loading,\n    error\n  } = useFetch(`https://covid19.mathdro.id/api/countries/${country}/confirmed`);\n  if (loading) return __jsx(\"p\", null, \"Loading States of selected country...\");\n  if (error) return __jsx(\"p\", null, \"Retrieving states API Error => \", error.toString());\n  if (states.error) return __jsx(\"h3\", null, \"No data found. Retrieving states API error => \", stats.error.message);\n  console.log(\"State wise info\", states);\n  let stateOptions = states.map(({\n    provinceState,\n    countryRegion\n  }, index) => ({\n    key: provinceState || countryRegion,\n    value: provinceState || countryRegion,\n    text: provinceState || countryRegion\n  }));\n\n  const onChange = selectedValue => {\n    let selected = states.find(state => state.provinceState === selectedValue);\n    console.log(\"Selected state info\", selected);\n\n    if (!selected) {\n      selected = states[0];\n    }\n\n    setSelectedState(selected);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Dropdown, {\n    placeholder: \"Select State\",\n    fluid: true,\n    search: true,\n    selection: true,\n    selectOnBlur: false,\n    options: stateOptions,\n    onChange: (e, data) => {\n      onChange(data.value);\n    }\n  }), __jsx(\"br\", null), selectedState && __jsx(Card.Group, {\n    itemsPerRow: 4\n  }, __jsx(Card, {\n    header: \"Confirmed\",\n    description: selectedState && numberWithCommas(selectedState.confirmed),\n    color: \"grey\",\n    meta: \"\"\n  }), __jsx(Card, {\n    header: \"Active\",\n    description: selectedState && numberWithCommas(selectedState.active),\n    color: \"blue\",\n    meta: \"\"\n  }), __jsx(Card, {\n    header: \"Recovered\",\n    description: selectedState && numberWithCommas(selectedState.recovered),\n    color: \"green\",\n    meta: \"\"\n  }), __jsx(Card, {\n    header: \"Deaths\",\n    description: selectedState && numberWithCommas(selectedState.deaths),\n    color: \"red\",\n    meta: \"\"\n  })));\n};\n\nexport default StateStats;","map":null,"metadata":{},"sourceType":"module"}