{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Learning\\\\coronavirus-tracker\\\\components\\\\CountrySelector.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport useFetch from \"../utils/useFetch\";\nimport { Select } from \"semantic-ui-react\";\n\nvar CountrySelector = function CountrySelector(_ref) {\n  var _onChange = _ref.onChange;\n\n  var _useFetch = useFetch(\"https://covid19.mathdro.id/api/countries\"),\n      countries = _useFetch.stats,\n      error = _useFetch.error,\n      loading = _useFetch.loading;\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Countries Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Error loading countries..\");\n  var countryOptions = Object.entries(countries.countries).map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        name = _ref3[0],\n        code = _ref3[1];\n\n    return {\n      key: name,\n      value: countries.iso3[code],\n      text: name\n    };\n  });\n  countryOptions = [{\n    key: \"world\",\n    value: \"world\",\n    text: \"World\"\n  }].concat(_toConsumableArray(countryOptions));\n  return __jsx(React.Fragment, null, __jsx(Select, {\n    onChange: function onChange(e) {\n      _onChange(e.target.value);\n    },\n    placeholder: \"Select your country\",\n    options: countryOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nexport default CountrySelector;","map":{"version":3,"sources":["C:/Learning/coronavirus-tracker/components/CountrySelector.js"],"names":["React","useState","useFetch","Select","CountrySelector","onChange","countries","stats","error","loading","countryOptions","Object","entries","map","name","code","key","value","iso3","text","e","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAkB;AAAA,MAAfC,SAAe,QAAfA,QAAe;;AAAA,kBACKH,QAAQ,CACnD,0CADmD,CADb;AAAA,MACzBI,SADyB,aAChCC,KADgC;AAAA,MACdC,KADc,aACdA,KADc;AAAA,MACPC,OADO,aACPA,OADO;;AAKxC,MAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AAEb,MAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AAEX,MAAIE,cAAc,GAAGC,MAAM,CAACC,OAAP,CAAeN,SAAS,CAACA,SAAzB,EAAoCO,GAApC,CACnB,iBAAkB;AAAA;AAAA,QAAhBC,IAAgB;AAAA,QAAVC,IAAU;;AAChB,WAAO;AAAEC,MAAAA,GAAG,EAAEF,IAAP;AAAaG,MAAAA,KAAK,EAAEX,SAAS,CAACY,IAAV,CAAeH,IAAf,CAApB;AAA0CI,MAAAA,IAAI,EAAEL;AAAhD,KAAP;AACD,GAHkB,CAArB;AAMAJ,EAAAA,cAAc,IACZ;AAAEM,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,KAAK,EAAE,OAAvB;AAAgCE,IAAAA,IAAI,EAAE;AAAtC,GADY,4BAETT,cAFS,EAAd;AAKA,SACE,4BACE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAE,kBAAAU,CAAC,EAAI;AACbf,MAAAA,SAAQ,CAACe,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,KAHH;AAIE,IAAA,WAAW,EAAC,qBAJd;AAKE,IAAA,OAAO,EAAEP,cALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD,CA/BD;;AAiCA,eAAeN,eAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport useFetch from \"../utils/useFetch\";\r\nimport { Select } from \"semantic-ui-react\";\r\n\r\nconst CountrySelector = ({ onChange }) => {\r\n  const { stats: countries, error, loading } = useFetch(\r\n    \"https://covid19.mathdro.id/api/countries\"\r\n  );\r\n\r\n  if (loading) return <p>Countries Loading...</p>;\r\n\r\n  if (error) return <p>Error loading countries..</p>;\r\n\r\n  let countryOptions = Object.entries(countries.countries).map(\r\n    ([name, code]) => {\r\n      return { key: name, value: countries.iso3[code], text: name };\r\n    }\r\n  );\r\n\r\n  countryOptions = [\r\n    { key: \"world\", value: \"world\", text: \"World\" },\r\n    ...countryOptions\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Select\r\n        onChange={e => {\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder='Select your country'\r\n        options={countryOptions}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountrySelector;\r\n"]},"metadata":{},"sourceType":"module"}