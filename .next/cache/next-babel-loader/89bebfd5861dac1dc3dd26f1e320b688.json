{"ast":null,"code":"var _jsxFileName = \"C:\\\\Learning\\\\coronavirus-tracker\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport CountrySelector from \"../components/CountrySelector\";\nimport Stats from \"../components/Stats\";\nimport { useState, useMemo } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Grid, Segment, Responsive, Button } from \"semantic-ui-react\";\nimport Chart from \"../components/Chart\";\nimport StateStats from \"../components/StateStats\";\n\nvar Index = function Index() {\n  var _useState = useState(\"https://covid19.mathdro.id/api\"),\n      url = _useState[0],\n      setUrl = _useState[1];\n\n  var _useState2 = useState({\n    iso2: \"\",\n    iso3: \"\"\n  }),\n      selectedCountry = _useState2[0],\n      setSelected = _useState2[1];\n\n  var memoStatsComponent = useMemo(function () {\n    return __jsx(Stats, {\n      url: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }, [url]);\n  var memoStateStats = useMemo(function () {\n    return __jsx(StateStats, {\n      iso3: selectedCountry.iso3,\n      iso2: selectedCountry.iso3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }, [selectedCountry]);\n\n  var onChange = function onChange(iso2, iso3) {\n    //console.log(\"iso2=>\", iso2, \"iso3=>\", iso3);\n    //this is to load state dropdown for StateStats\n    setSelected({\n      iso2: iso2,\n      iso3: iso3\n    });\n\n    if (iso2 === \"world\") {\n      setUrl(\"https://covid19.mathdro.id/api\");\n    } else {\n      //this is to load statistics of selected country. country is iso2 code\n      setUrl(\"https://covid19.mathdro.id/api/countries/\".concat(iso2));\n    }\n  };\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Grid, {\n    stackable: true,\n    stretched: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Grid.Row, {\n    stretched: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Responsive, {\n    as: Segment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Chart, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })))), __jsx(Grid.Row, {\n    stretched: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Responsive, {\n    as: Segment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(CountrySelector, {\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), memoStatsComponent))), __jsx(Grid.Row, {\n    stretched: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(Responsive, {\n    as: Segment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, memoStateStats))), __jsx(Grid.Row, {\n    stretched: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Responsive, {\n    as: Segment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(Button, {\n    basic: true,\n    size: \"mini\",\n    onClick: function onClick(e, data) {\n      handleBtnClick(data.children, \"US\");\n    },\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"New Jersey\"), __jsx(Button, {\n    basic: true,\n    size: \"mini\",\n    onClick: function onClick(e, data) {\n      handleBtnClick(data.children, \"US\");\n    },\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"New York\"))))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Learning/coronavirus-tracker/pages/index.js"],"names":["CountrySelector","Stats","useState","useMemo","Container","Grid","Segment","Responsive","Button","Chart","StateStats","Index","url","setUrl","iso2","iso3","selectedCountry","setSelected","memoStatsComponent","memoStateStats","onChange","e","data","handleBtnClick","children"],"mappings":"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","sourcesContent":["import CountrySelector from \"../components/CountrySelector\";\r\nimport Stats from \"../components/Stats\";\r\nimport { useState, useMemo } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { Grid, Segment, Responsive, Button } from \"semantic-ui-react\";\r\nimport Chart from \"../components/Chart\";\r\nimport StateStats from \"../components/StateStats\";\r\n\r\nconst Index = () => {\r\n  const [url, setUrl] = useState(\"https://covid19.mathdro.id/api\");\r\n\r\n  const [selectedCountry, setSelected] = useState({ iso2: \"\", iso3: \"\" });\r\n\r\n  const memoStatsComponent = useMemo(() => <Stats url={url} />, [url]);\r\n\r\n  const memoStateStats = useMemo(\r\n    () => (\r\n      <StateStats iso3={selectedCountry.iso3} iso2={selectedCountry.iso3} />\r\n    ),\r\n    [selectedCountry]\r\n  );\r\n\r\n  const onChange = (iso2, iso3) => {\r\n    //console.log(\"iso2=>\", iso2, \"iso3=>\", iso3);\r\n\r\n    //this is to load state dropdown for StateStats\r\n    setSelected({ iso2, iso3 });\r\n\r\n    if (iso2 === \"world\") {\r\n      setUrl(\"https://covid19.mathdro.id/api\");\r\n    } else {\r\n      //this is to load statistics of selected country. country is iso2 code\r\n      setUrl(`https://covid19.mathdro.id/api/countries/${iso2}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid stackable={true} stretched={true}>\r\n        <Grid.Row stretched>\r\n          <Grid.Column>\r\n            <Responsive as={Segment}>\r\n              <Chart />\r\n            </Responsive>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row stretched>\r\n          <Grid.Column>\r\n            <Responsive as={Segment}>\r\n              <CountrySelector onChange={onChange} />\r\n              <br />\r\n              {memoStatsComponent}\r\n            </Responsive>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row stretched>\r\n          <Grid.Column>\r\n            <Responsive as={Segment}>{memoStateStats}</Responsive>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row stretched>\r\n          <Grid.Column>\r\n            <Responsive as={Segment}>\r\n              <Button\r\n                basic\r\n                size='mini'\r\n                onClick={(e, data) => {\r\n                  handleBtnClick(data.children, \"US\");\r\n                }}\r\n                color='blue'\r\n              >\r\n                New Jersey\r\n              </Button>\r\n              <Button\r\n                basic\r\n                size='mini'\r\n                onClick={(e, data) => {\r\n                  handleBtnClick(data.children, \"US\");\r\n                }}\r\n                color='blue'\r\n              >\r\n                New York\r\n              </Button>\r\n            </Responsive>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}