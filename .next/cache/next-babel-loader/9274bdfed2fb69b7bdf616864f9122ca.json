{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from \"react\";\nexport default (function (url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var getStats = function getStats() {\n    var data, response;\n    return _regeneratorRuntime.async(function getStats$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n            setStats(data); // } catch (err) {\n            //   setError(err);\n            //   setStats(null);\n            // }\n\n            setLoading(false);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (url) getStats();\n  }, [url, setStats]);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}); // export default function Example() {\n//   const [data, dataSet] = useState(false);\n//   async function fetchMyAPI() {\n//     let response = await fetch(\"api/data\");\n//     response = await res.json();\n//     dataSet(response);\n//   }\n//   useEffect(() => {\n//     fetchMyAPI();\n//   }, []);\n//   return <div>{data}</div>;\n// }","map":{"version":3,"sources":["C:/Learning/coronavirus-tracker/utils/useFetch.js"],"names":["useState","useEffect","url","stats","setStats","loading","setLoading","error","setError","getStats","fetch","response","json","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,gBAAe,UAAAC,GAAG,EAAI;AAAA,kBACMF,QAAQ,EADd;AAAA,MACbG,KADa;AAAA,MACNC,QADM;;AAAA,mBAEUJ,QAAQ,CAAC,IAAD,CAFlB;AAAA,MAEbK,OAFa;AAAA,MAEJC,UAFI;;AAAA,mBAGMN,QAAQ,CAAC,EAAD,CAHd;AAAA,MAGbO,KAHa;AAAA,MAGNC,QAHM;;AAKpB,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGMC,KAAK,CAACR,GAAD,CAHX;;AAAA;AAGXS,YAAAA,QAHW;AAAA;AAAA,6CAIFA,QAAQ,CAACC,IAAT,EAJE;;AAAA;AAIfC,YAAAA,IAJe;AAKfT,YAAAA,QAAQ,CAACS,IAAD,CAAR,CALe,CAMf;AACA;AACA;AACA;;AACAP,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAaAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIC,GAAJ,EAASO,QAAQ;AAClB,GAFQ,EAEN,CAACP,GAAD,EAAME,QAAN,CAFM,CAAT;AAIA,SAAO;AAAED,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,OAAO,EAAPA,OAAT;AAAkBE,IAAAA,KAAK,EAALA;AAAlB,GAAP;AACD,CAvBD,E,CAyBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default url => {\r\n  const [stats, setStats] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const getStats = async () => {\r\n    let data;\r\n    // try {\r\n    let response = await fetch(url);\r\n    data = await response.json();\r\n    setStats(data);\r\n    // } catch (err) {\r\n    //   setError(err);\r\n    //   setStats(null);\r\n    // }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (url) getStats();\r\n  }, [url, setStats]);\r\n\r\n  return { stats, loading, error };\r\n};\r\n\r\n// export default function Example() {\r\n//   const [data, dataSet] = useState(false);\r\n\r\n//   async function fetchMyAPI() {\r\n//     let response = await fetch(\"api/data\");\r\n//     response = await res.json();\r\n//     dataSet(response);\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     fetchMyAPI();\r\n//   }, []);\r\n\r\n//   return <div>{data}</div>;\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}