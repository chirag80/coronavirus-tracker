{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Learning\\\\coronavirus-tracker\\\\components\\\\BarChart.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport useFetch from \"../utils/useFetch\";\nvar data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [{\n    label: \"My First dataset\",\n    backgroundColor: \"rgba(255,99,132,0.2)\",\n    borderColor: \"rgba(255,99,132,1)\",\n    borderWidth: 1,\n    hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n    hoverBorderColor: \"rgba(255,99,132,1)\",\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nvar BarChart = function BarChart(_ref) {\n  var selectedState = _ref.selectedState;\n  console.log(\"Bar Chart\", selectedState);\n  if (!selectedState) return __jsx(React.Fragment, null);\n\n  var _useState = useState({}),\n      dateWiseInfo = _useState[0],\n      setDateWiseInfo = _useState[1];\n\n  var getData = function getData() {\n    var response, data;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://coronavirus-tracker-api.herokuapp.com/confirmed\"));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n            console.log(\"useEffect bar chart\", data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    return function () {//cleanup code\n    };\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Bar, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nexport default BarChart;","map":{"version":3,"sources":["C:/Learning/coronavirus-tracker/components/BarChart.js"],"names":["React","useState","useEffect","Bar","useFetch","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","BarChart","selectedState","console","log","dateWiseInfo","setDateWiseInfo","getData","fetch","response","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,kBADT;AAEEC,IAAAA,eAAe,EAAE,sBAFnB;AAGEC,IAAAA,WAAW,EAAE,oBAHf;AAIEC,IAAAA,WAAW,EAAE,CAJf;AAKEC,IAAAA,oBAAoB,EAAE,sBALxB;AAMEC,IAAAA,gBAAgB,EAAE,oBANpB;AAOER,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAPR,GADQ;AAFC,CAAb;;AAeA,IAAMS,QAAQ,GAAG,SAAXA,QAAW,OAAuB;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,aAAzB;AAEA,MAAI,CAACA,aAAL,EAAoB,OAAO,2BAAP;;AAHkB,kBAKEd,QAAQ,CAAC,EAAD,CALV;AAAA,MAK/BiB,YAL+B;AAAA,MAKjBC,eALiB;;AAOtC,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOC,KAAK,CACxB,yDADwB,CADZ;;AAAA;AACVC,YAAAA,QADU;AAAA;AAAA,6CAIGA,QAAQ,CAACC,IAAT,EAJH;;AAAA;AAIVlB,YAAAA,IAJU;AAKdW,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCZ,IAAnC;;AALc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAQAH,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO,YAAM,CACX;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAEG,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA1BD;;AA4BA,eAAeS,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport useFetch from \"../utils/useFetch\";\r\n\r\nconst data = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      backgroundColor: \"rgba(255,99,132,0.2)\",\r\n      borderColor: \"rgba(255,99,132,1)\",\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n      hoverBorderColor: \"rgba(255,99,132,1)\",\r\n      data: [65, 59, 80, 81, 56, 55, 40]\r\n    }\r\n  ]\r\n};\r\n\r\nconst BarChart = ({ selectedState }) => {\r\n  console.log(\"Bar Chart\", selectedState);\r\n\r\n  if (!selectedState) return <></>;\r\n\r\n  const [dateWiseInfo, setDateWiseInfo] = useState({});\r\n\r\n  const getData = async () => {\r\n    let response = await fetch(\r\n      \"https://coronavirus-tracker-api.herokuapp.com/confirmed\"\r\n    );\r\n    let data = await response.json();\r\n    console.log(\"useEffect bar chart\", data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      //cleanup code\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Bar data={data} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"]},"metadata":{},"sourceType":"module"}