{"ast":null,"code":"var _jsxFileName = \"C:\\\\Learning\\\\coronavirus-tracker\\\\components\\\\BarChart.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport useFetch from \"../utils/useFetch\";\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [{\n    label: \"My First dataset\",\n    backgroundColor: \"rgba(255,99,132,0.2)\",\n    borderColor: \"rgba(255,99,132,1)\",\n    borderWidth: 1,\n    hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n    hoverBorderColor: \"rgba(255,99,132,1)\",\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nconst BarChart = ({\n  selectedState\n}) => {\n  console.log(\"Bar Chart\", selectedState);\n  if (!selectedState) return __jsx(React.Fragment, null);\n  const {\n    0: dateWiseInfo,\n    1: setDateWiseInfo\n  } = useState({});\n\n  const getData = async () => {\n    let response = await fetch(\"https://coronavirus-tracker-api.herokuapp.com/confirmed\");\n    let data = await response.json();\n    console.log(\"useEffect bar chart\", data);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Bar, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default BarChart;","map":{"version":3,"sources":["C:/Learning/coronavirus-tracker/components/BarChart.js"],"names":["React","useState","useEffect","Bar","useFetch","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","BarChart","selectedState","console","log","dateWiseInfo","setDateWiseInfo","getData","response","fetch","json"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,kBADT;AAEEC,IAAAA,eAAe,EAAE,sBAFnB;AAGEC,IAAAA,WAAW,EAAE,oBAHf;AAIEC,IAAAA,WAAW,EAAE,CAJf;AAKEC,IAAAA,oBAAoB,EAAE,sBALxB;AAMEC,IAAAA,gBAAgB,EAAE,oBANpB;AAOER,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAPR,GADQ;AAFC,CAAb;;AAeA,MAAMS,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,aAAzB;AAEA,MAAI,CAACA,aAAL,EAAoB,OAAO,2BAAP;AAEpB,QAAM;AAAA,OAACG,YAAD;AAAA,OAAeC;AAAf,MAAkClB,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMmB,OAAO,GAAG,YAAY;AAC1B,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,yDADwB,CAA1B;AAGA,QAAIjB,IAAI,GAAG,MAAMgB,QAAQ,CAACE,IAAT,EAAjB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCZ,IAAnC;AACD,GAND;;AAQAH,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAEf,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAxBD;;AA0BA,eAAeS,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport useFetch from \"../utils/useFetch\";\r\n\r\nconst data = {\r\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n  datasets: [\r\n    {\r\n      label: \"My First dataset\",\r\n      backgroundColor: \"rgba(255,99,132,0.2)\",\r\n      borderColor: \"rgba(255,99,132,1)\",\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n      hoverBorderColor: \"rgba(255,99,132,1)\",\r\n      data: [65, 59, 80, 81, 56, 55, 40]\r\n    }\r\n  ]\r\n};\r\n\r\nconst BarChart = ({ selectedState }) => {\r\n  console.log(\"Bar Chart\", selectedState);\r\n\r\n  if (!selectedState) return <></>;\r\n\r\n  const [dateWiseInfo, setDateWiseInfo] = useState({});\r\n\r\n  const getData = async () => {\r\n    let response = await fetch(\r\n      \"https://coronavirus-tracker-api.herokuapp.com/confirmed\"\r\n    );\r\n    let data = await response.json();\r\n    console.log(\"useEffect bar chart\", data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Bar data={data} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"]},"metadata":{},"sourceType":"module"}