{"ast":null,"code":"var _jsxFileName = \"C:\\\\Learning\\\\coronavirus-tracker\\\\components\\\\BarChart.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { getBarChartData, getBarChartOptions } from \"../utils/chartUtils\";\n\nconst BarChart = ({\n  selectedState\n}) => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: locations,\n    1: setLocations\n  } = useState({});\n  const {\n    0: chartData,\n    1: setChartData\n  } = useState({});\n  const {\n    0: chartOptinos,\n    1: setChartOptions\n  } = useState({});\n\n  const getData = async () => {\n    let response = await fetch(\"https://coronavirus-tracker-api.herokuapp.com/confirmed\");\n    let data = await response.json(); //console.log(\"useEffect bar chart\", data.locations);\n\n    setLoading(false);\n    setLocations(data.locations);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  useEffect(() => {\n    if (Object.keys(locations).length > 0) {\n      setChartData(getBarChartData(locations, selectedState));\n      setChartOptions(getBarChartOptions(selectedState));\n    }\n  }, [selectedState, locations]);\n  if (loading) return __jsx(React.Fragment, null, \" Loading Bar chart data..\");\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Bar, {\n    height: 125,\n    data: chartData,\n    options: chartOptinos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n};\n\nexport default BarChart;","map":{"version":3,"sources":["C:/Learning/coronavirus-tracker/components/BarChart.js"],"names":["React","useState","useEffect","Bar","getBarChartData","getBarChartOptions","BarChart","selectedState","loading","setLoading","locations","setLocations","chartData","setChartData","chartOptinos","setChartOptions","getData","response","fetch","data","json","Object","keys","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,qBAApD;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACtC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACW,SAAD;AAAA,OAAYC;AAAZ,MAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACa,YAAD;AAAA,OAAeC;AAAf,MAAkCd,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMe,OAAO,GAAG,YAAY;AAC1B,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,yDADwB,CAA1B;AAGA,QAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB,CAJ0B,CAK1B;;AACAX,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,IAAAA,YAAY,CAACQ,IAAI,CAACT,SAAN,CAAZ;AACD,GARD;;AAUAR,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,MAAM,CAACC,IAAP,CAAYZ,SAAZ,EAAuBa,MAAvB,GAAgC,CAApC,EAAuC;AACrCV,MAAAA,YAAY,CAACT,eAAe,CAACM,SAAD,EAAYH,aAAZ,CAAhB,CAAZ;AACAQ,MAAAA,eAAe,CAACV,kBAAkB,CAACE,aAAD,CAAnB,CAAf;AACD;AACF,GALQ,EAKN,CAACA,aAAD,EAAgBG,SAAhB,CALM,CAAT;AAOA,MAAIF,OAAJ,EAAa,OAAO,wDAAP;AACb,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,GAAb;AAAkB,IAAA,IAAI,EAAEI,SAAxB;AAAmC,IAAA,OAAO,EAAEE,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CAnCD;;AAqCA,eAAeR,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { getBarChartData, getBarChartOptions } from \"../utils/chartUtils\";\r\n\r\nconst BarChart = ({ selectedState }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [locations, setLocations] = useState({});\r\n  const [chartData, setChartData] = useState({});\r\n  const [chartOptinos, setChartOptions] = useState({});\r\n\r\n  const getData = async () => {\r\n    let response = await fetch(\r\n      \"https://coronavirus-tracker-api.herokuapp.com/confirmed\"\r\n    );\r\n    let data = await response.json();\r\n    //console.log(\"useEffect bar chart\", data.locations);\r\n    setLoading(false);\r\n    setLocations(data.locations);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(locations).length > 0) {\r\n      setChartData(getBarChartData(locations, selectedState));\r\n      setChartOptions(getBarChartOptions(selectedState));\r\n    }\r\n  }, [selectedState, locations]);\r\n\r\n  if (loading) return <> Loading Bar chart data..</>;\r\n  return (\r\n    <>\r\n      <div>\r\n        <Bar height={125} data={chartData} options={chartOptinos} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"]},"metadata":{},"sourceType":"module"}