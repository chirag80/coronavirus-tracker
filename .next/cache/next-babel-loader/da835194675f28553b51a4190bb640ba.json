{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport useFetch from \"../utils/useFetch\";\nimport { Dropdown } from \"semantic-ui-react\";\n\nvar CountrySelector = function CountrySelector(_ref) {\n  var _onChange = _ref.onChange;\n\n  var _useFetch = useFetch(\"https://covid19.mathdro.id/api/countries\"),\n      countries = _useFetch.stats,\n      error = _useFetch.error,\n      loading = _useFetch.loading;\n\n  if (loading) return __jsx(\"p\", null, \"Countries Loading...\");\n  if (error) return __jsx(\"p\", null, \"Error loading countries..\");\n  var countryOptions = Object.entries(countries.countries).map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        name = _ref3[0],\n        code = _ref3[1];\n\n    return {\n      key: name,\n      value: countries.iso3[code],\n      text: name\n    };\n  });\n  countryOptions = [{\n    key: \"world\",\n    value: \"world\",\n    text: \"World\"\n  }].concat(_toConsumableArray(countryOptions));\n  return __jsx(React.Fragment, null, __jsx(Dropdown, {\n    placeholder: \"Select Country\",\n    fluid: true,\n    search: true,\n    selection: true,\n    options: countryOptions,\n    defaultValue: \"world\",\n    onChange: function onChange(e, data) {\n      _onChange(data.value);\n    }\n  }));\n};\n\nexport default CountrySelector;","map":null,"metadata":{},"sourceType":"module"}