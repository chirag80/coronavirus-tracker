{"ast":null,"code":"import { useState, useEffect, useRef } from \"react\";\nexport default (url => {\n  const isCurrent = useRef(true);\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  useEffect(() => {\n    return () => {\n      // called when the component is going to unmount\n      isCurrent.current = false;\n    };\n  }, []);\n\n  const getStats = async () => {\n    console.log(\"UseFetch invoked:\", url);\n    let data;\n\n    try {\n      let response = await fetch(url);\n      data = await response.json();\n      setStats(data);\n    } catch (err) {\n      setError(err);\n      setStats(null);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (url) getStats();\n  }, [url, setStats]);\n  return {\n    stats,\n    loading,\n    error\n  };\n}); // export default function Example() {\n//   const [data, dataSet] = useState(false);\n//   async function fetchMyAPI() {\n//     let response = await fetch(\"api/data\");\n//     response = await res.json();\n//     dataSet(response);\n//   }\n//   useEffect(() => {\n//     fetchMyAPI();\n//   }, []);\n//   return <div>{data}</div>;\n// }","map":{"version":3,"sources":["C:/Learning/coronavirus-tracker/utils/useFetch.js"],"names":["useState","useEffect","useRef","url","isCurrent","stats","setStats","loading","setLoading","error","setError","current","getStats","console","log","data","response","fetch","json","err"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,gBAAeC,GAAG,IAAI;AACpB,QAAMC,SAAS,GAAGF,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX;AACAG,MAAAA,SAAS,CAACO,OAAV,GAAoB,KAApB;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,QAAQ,GAAG,YAAY;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCX,GAAjC;AACA,QAAIY,IAAJ;;AACA,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACd,GAAD,CAA1B;AACAY,MAAAA,IAAI,GAAG,MAAMC,QAAQ,CAACE,IAAT,EAAb;AACAZ,MAAAA,QAAQ,CAACS,IAAD,CAAR;AACD,KAJD,CAIE,OAAOI,GAAP,EAAY;AACZT,MAAAA,QAAQ,CAACS,GAAD,CAAR;AACAb,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACDE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAZD;;AAcAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,GAAJ,EAASS,QAAQ;AAClB,GAFQ,EAEN,CAACT,GAAD,EAAMG,QAAN,CAFM,CAAT;AAIA,SAAO;AAAED,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAP;AACD,CAhCD,E,CAkCA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default url => {\r\n  const isCurrent = useRef(true);\r\n  const [stats, setStats] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // called when the component is going to unmount\r\n      isCurrent.current = false;\r\n    };\r\n  }, []);\r\n\r\n  const getStats = async () => {\r\n    console.log(\"UseFetch invoked:\", url);\r\n    let data;\r\n    try {\r\n      let response = await fetch(url);\r\n      data = await response.json();\r\n      setStats(data);\r\n    } catch (err) {\r\n      setError(err);\r\n      setStats(null);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (url) getStats();\r\n  }, [url, setStats]);\r\n\r\n  return { stats, loading, error };\r\n};\r\n\r\n// export default function Example() {\r\n//   const [data, dataSet] = useState(false);\r\n\r\n//   async function fetchMyAPI() {\r\n//     let response = await fetch(\"api/data\");\r\n//     response = await res.json();\r\n//     dataSet(response);\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     fetchMyAPI();\r\n//   }, []);\r\n\r\n//   return <div>{data}</div>;\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}