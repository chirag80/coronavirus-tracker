{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6d472b96fa8dd92ff8e9.hot-update.js","sources":["webpack:///./components/StateStats.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useFetch from \"../utils/useFetch\";\r\nimport { Card, Button, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\n\r\nconst StateStats = ({ country }) => {\r\n  if (country === \"world\") {\r\n    return <h3>Select country above to see state wise data</h3>;\r\n  }\r\n\r\n  const [selectedState, setSelectedState] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    setSelectedState(undefined);\r\n  }, [country]);\r\n\r\n  const { stats: states, loading, error } = useFetch(\r\n    `https://covid19.mathdro.id/api/countries/${country}/confirmed`\r\n  );\r\n\r\n  if (loading) return <p>Loading States of selected country...</p>;\r\n\r\n  if (error) return <p>Retrieving states API Error => {error.toString()}</p>;\r\n\r\n  if (states.error)\r\n    return (\r\n      <h3>\r\n        No data found. Retrieving states API error => {stats.error.message}\r\n      </h3>\r\n    );\r\n\r\n  console.log(\"State wise info\", states);\r\n\r\n  let stateOptions = states.map(({ provinceState, countryRegion }, index) => ({\r\n    key: provinceState || countryRegion,\r\n    value: provinceState || countryRegion,\r\n    text: provinceState || countryRegion\r\n  }));\r\n\r\n  const onChange = selectedValue => {\r\n    let selected = states.find(state => state.provinceState === selectedValue);\r\n    console.log(\"Selected state info\", selected);\r\n    if (!selected) {\r\n      selected = states[0];\r\n    }\r\n    setSelectedState(selected);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dropdown\r\n        placeholder='Select State'\r\n        fluid\r\n        search\r\n        selection\r\n        selectOnBlur={false}\r\n        options={stateOptions}\r\n        onChange={(e, data) => {\r\n          onChange(data.value);\r\n        }}\r\n      />\r\n      <br />\r\n      {selectedState && (\r\n        <Card.Group>\r\n          <Card>\r\n            <Card.Content>\r\n              <Image\r\n                floated='right'\r\n                size='mini'\r\n                src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\r\n              />\r\n              <Card.Header>Steve Sanders</Card.Header>\r\n              <Card.Meta>Friends of Elliot</Card.Meta>\r\n              <Card.Description>\r\n                Steve wants to add you to the group{\" \"}\r\n                <strong>best friends</strong>\r\n              </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <div className='ui two buttons'>\r\n                <Button basic color='green'>\r\n                  Approve\r\n                </Button>\r\n                <Button basic color='red'>\r\n                  Decline\r\n                </Button>\r\n              </div>\r\n            </Card.Content>\r\n          </Card>\r\n          {/* <Card\r\n            header='Total'\r\n            description={\r\n              selectedState && numberWithCommas(selectedState.confirmed)\r\n            }\r\n            color='grey'\r\n            meta=''\r\n          />\r\n          <Card\r\n            header='Active'\r\n            description={\r\n              selectedState && numberWithCommas(selectedState.active)\r\n            }\r\n            color='blue'\r\n            meta=''\r\n          />\r\n          <Card\r\n            header='Recovered'\r\n            description={\r\n              selectedState && numberWithCommas(selectedState.recovered)\r\n            }\r\n            color='green'\r\n            meta=''\r\n          />\r\n          <Card\r\n            header='Deaths'\r\n            description={\r\n              selectedState && numberWithCommas(selectedState.deaths)\r\n            }\r\n            color='red'\r\n            meta=''\r\n          /> */}\r\n        </Card.Group>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StateStats;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AACA;AAcsourceRoot":""}